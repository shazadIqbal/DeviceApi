{
	"info": {
		"_postman_id": "806174ad-6e15-4484-a556-902b4bffce63",
		"name": "Device-Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44841545"
	},
	"item": [
		{
			"name": "Create device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has device ID\", function () {\r",
							"    var json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"AI4\",\r\n  \"brand\": \"Test\",\r\n  \"state\": \"AVAILABLE\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/devices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Devices",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains array\", function () {\r",
							"    var json = pm.response.json();\r",
							"    pm.expect(json).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/devices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Device By State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Each device has state IN_USE\", function () {\r",
							"    var json = pm.response.json();\r",
							"    json.forEach(function(device) {\r",
							"        pm.expect(device.state).to.eql(\"IN_USE\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/devices/state/IN_USE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices",
						"state",
						"IN_USE"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Device By Brand",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Devices match brand Test\", function () {\r",
							"    var json = pm.response.json();\r",
							"    json.forEach(function(device) {\r",
							"        pm.expect(device.brand).to.eql(\"Test\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/devices/brand/Test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices",
						"brand",
						"Test"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Device has updated values\", function () {\r",
							"    var json = pm.response.json();\r",
							"    pm.expect(json.name).to.eql(\"Test1\");\r",
							"    pm.expect(json.brand).to.eql(\"TEST1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Creation time should not be modified\", function () {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.creationTime).not.eql(\"2000-01-01T00:00:00\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test1\",\r\n  \"brand\": \"TEST1\",\r\n  \"state\": \"AVAILABLE\",\r\n  \"creationTime\": \"2025-01-01T00:00:00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/devices/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Device State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"State is updated to AVAILABLE\", function () {\r",
							"    var json = pm.response.json();\r",
							"    pm.expect(json.state).to.eql(\"AVAILABLE\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/devices/2/state?state=AVAILABLE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices",
						"2",
						"state"
					],
					"query": [
						{
							"key": "state",
							"value": "AVAILABLE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/devices/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"devices",
						"2"
					]
				}
			},
			"response": []
		}
	]
}